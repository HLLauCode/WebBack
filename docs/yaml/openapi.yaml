openapi: 3.0.0
info:
  version: 1.0.0
  title: Back End Demonstration API
  description: A simple Dog API
  contact:
    name: lau hok lung
    email: 217011770@stu.vtc.edu.hk
  license: 
    name: Apache 2.0
    url: 'https://www.apache.org/licenses/LICENSE-2.0.html'
servers:
  - url: 'https://DogAPI.hllaucode.repl.co/'
    description: Development Server
tags:
  - name: Users
    description: API endpoints for user management.
  - name: Dogs
    description: Access and perform CRUD operations on dog entries.

paths:
  /users:
    post:
      tags:
        - Users
      description:
        Create a new user.
      requestBody:
        description: All new user data.
        required: true
        content:
          application/json:
            schema:
              $ref: ./users.json#/definitions/users
      responses:
        '201':
          description: User created.
        '400':
          description: User created fail, the username/email has already been used.
    get:
      tags:
        - Users
      description:
        Get user information.
      responses:
        '200':
          description: View of users information.
        '403':
          description: No permission.
  /privates:
    get:
      tags:
        - Privates
      description:
        Get privage page.
      responses:
        '200':
          description: View of private page.
  /dogs:
    post:
      tags:
        - Dogs
      description:
        Create a new dog.
      requestBody:
        description: All new dog data.
        required: true
        content:
          application/json:
            schema:
              $ref: ./dogs.json#/definitions/dogs
      responses:
        '201':
          description: Dogs created.
        '400':
          description: User not logged in.
        '403':
          description: User do not have the permission.
    get:
      tags:
        - Dogs
      description:
        Get all dogs.
      responses:
        '200':
          description: View of all dogs record.
  /dogs/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
        description: Numeric id of the dog.
    get:
      tags:
        - Dogs
      description:
        Get dog by ID.
      responses:
        '200':
          description: View of an dog record.
        '404':
          description: Dog was not found in the DB.
    put:
      tags:
        - Dogs
      description:
        Update dog by ID.
      responses:
        '200':
          description: Update confirmation and link to record.
        '400':
          description: User not logged in.
        '403':
          description: User do not have the permission.
        '404':
          description: Dog was not found in the DB.
    delete:
      tags:
        - Dogs
      description:
        Delete dog by ID.
      responses:
        '200':
          description: Delete confirmation.
        '400':
          description: User not logged in.
        '403':
          description: User do not have the permission.
        '404':
          description: Dog was not found in the DB.
